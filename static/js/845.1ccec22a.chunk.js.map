{"version":3,"file":"static/js/845.1ccec22a.chunk.js","mappings":"0OAMMA,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAoCZ,UAjCa,WACX,OAA4BC,EAAAA,EAAAA,UAASD,GAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,2FACxBN,EAAUH,GADc,mBAIHU,EAAAA,EAAAA,MAJG,OAIhBC,EAJgB,OAKtBN,EAAUM,GACVR,EAAUH,GACVO,EAAS,MAPa,kDAStBJ,EAAUH,GACVO,EAAS,KAAMK,SAVO,0DAAH,qDAcvBH,GACD,GAAE,KAGD,6BACE,wBAAI,mBACHP,IAAWF,IAAmB,SAAC,IAAD,CAAoBY,QAASN,IAC3DJ,IAAWF,IAAkB,SAAC,IAAD,IAC7BE,IAAWF,IAAmB,SAAC,IAAD,CAAYI,OAAQA,MAGxD,C,+LCvCDS,EAAAA,EAAAA,SAAAA,QCJiB,+BDKjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QCPc,mCDQdC,OAAO,EACPC,SAAU,SAIL,IAAMN,EAAiB,mCAAG,sGACRG,EAAAA,EAAAA,IAAU,uBADF,uBACvBF,EADuB,EACvBA,KADuB,kBAGxBA,EAAKM,SAHmB,2CAAH,qDAOjBC,EAAY,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACHP,EAAAA,EAAAA,IAAA,8BAAiCM,EAAjC,iBAA+CC,IAD5C,uBAClBT,EADkB,EAClBA,KADkB,kBAGnBA,EAAKM,SAHc,2CAAH,sDAOZI,EAAe,mCAAG,WAAMC,GAAN,yFACNT,EAAAA,EAAAA,IAAA,iBAAoBS,IADd,uBACrBX,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAOfY,EAAe,mCAAG,WAAMD,GAAN,yFACNT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,aADM,uBACrBX,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAOfa,EAAe,mCAAG,WAAMF,GAAN,yFACNT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,aADM,uBACrBX,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,qD,mEEvCb,SAASc,EAAT,GAA0C,IAAZb,EAAW,EAAXA,QAC3C,OACE,0BACE,uBAAIA,KAGT,C,mFCgBD,EArBsB,SAAC,GAA2B,IAAzBc,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAC5BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMJ,GAA1C,WACE,0BACE,gBACEK,IACEN,EAAM,yCACgCA,GADhC,gHAIRO,IAAI,eAGR,wBAAKR,GAAgB,kBAI5B,ECRD,EAZmB,SAAC,GAAgB,IAAdvB,EAAa,EAAbA,OACpB,OACE,wBACGA,EAAOgC,KAAI,YAAiC,IAA9BV,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOU,EAAkB,EAAlBA,YACxB,OACE,SAAC,EAAD,CAAwBX,GAAIA,EAAIC,MAAOA,EAAOC,OAAQS,GAAlCX,EAEvB,KAGN,C","sources":["Pages/Home.js","Services/Api.js","Services/Api-key.js","components/ErrorOccurred.jsx","components/MovieListItem.jsx","components/MoviesList.jsx"],"sourcesContent":["import ErrorMessageToUser from 'components/ErrorOccurred';\nimport Loader from 'components/Loader';\nimport MoviesList from 'components/MoviesList';\nimport React, { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'Services/Api';\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Home = () => {\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrendingFilm = async () => {\n      setStatus(STATUS.PENDING);\n\n      try {\n        const data = await getTrendingMovies();\n        setMovies(data);\n        setStatus(STATUS.RESOLVED);\n        setError(null);\n      } catch (error) {\n        setStatus(STATUS.REJECTED);\n        setError(error.message);\n      }\n    };\n\n    fetchTrendingFilm();\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {status === STATUS.REJECTED && <ErrorMessageToUser message={error} />}\n      {status === STATUS.PENDING && <Loader />}\n      {status === STATUS.RESOLVED && <MoviesList movies={movies} />}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from './Api-key';\n// https://api.themoviedb.org/3/movie/550?api_key=839ee1ac45e2249141bd738796b376ad пример исп-я\n\n// https://drive.google.com/file/d/1vR0hi3n1236Q5Bg4-se-8JVKD9UKSfId/view    ссылка на превью ДЗ\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  adult: false,\n  language: 'en-US',\n};\n\n// ! ====== for component Home popular movies ======\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day');\n\n  return data.results;\n};\n\n// ! ====== for component Movies search movies ======\nexport const searchMovies = async (query, page = 1) => {\n  const { data } = await axios.get(`/search/movie?query=${query}&page=${page}`);\n\n  return data.results;\n};\n\n// ! ====== for details info about movie ======\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`);\n\n  return data;\n};\n\n// ! ====== get info about the cast of movie ======\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n\n  return data;\n};\n\n// ! ====== get info about the rewiews of movie ======\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n\n  return data;\n};\n","const API_KEY = '839ee1ac45e2249141bd738796b376ad';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport { API_KEY, BASE_URL };\n","import PropTypes from 'prop-types';\n\nexport default function ErrorMessageToUser({ message }) {\n  return (\n    <div>\n      <p>{message}</p>\n    </div>\n  );\n}\n\nErrorMessageToUser.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieListItem = ({ id, title, poster }) => {\n  const location = useLocation();\n\n  return (\n    <li>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <div>\n          <img\n            src={\n              poster\n                ? `https://image.tmdb.org/t/p/w500${poster}`\n                : `https://upload.wikimedia.org/wikipedia/commons/thumb/f/f9/No-image-available.jpg/640px-No-image-available.jpg`\n            }\n            alt=\"{title}\"\n          />\n        </div>\n        <h2>{title ? title : 'No tittle'}</h2>\n      </Link>\n    </li>\n  );\n};\nexport default MovieListItem;\n\nMovieListItem.propTypes = {\n  title: PropTypes.string,\n  id: PropTypes.number,\n  poster: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport MovieListItem from './MovieListItem';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map(({ id, title, poster_path }) => {\n        return (\n          <MovieListItem key={id} id={id} title={title} poster={poster_path} />\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n"],"names":["STATUS","useState","status","setStatus","movies","setMovies","error","setError","useEffect","fetchTrendingFilm","getTrendingMovies","data","message","axios","api_key","adult","language","results","searchMovies","query","page","getMovieDetails","movieId","getMovieCredits","getMovieReviews","ErrorMessageToUser","id","title","poster","location","useLocation","to","state","from","src","alt","map","poster_path"],"sourceRoot":""}