{"version":3,"file":"static/js/948.2f8e9521.chunk.js","mappings":"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","sources":["components/MovieDetailPage.jsx","components/Button.jsx","Pages/MovieDetails.js","Services/Api.js","Services/Api-key.js"],"sourcesContent":["import { NavLink, Outlet, useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from './Loader';\n\nexport default function MovieDetailPage({ data }) {\n  const {\n    original_title,\n    title,\n    genres,\n    overview,\n    poster_path,\n    release_date,\n    vote_average,\n  } = data;\n\n  // Prepear data for render\n  const rating = Math.round(vote_average * 10);\n  const date = release_date.slice(0, 4);\n  const genresArray = genres.map(gen => gen.name).join(', ');\n  const location = useLocation();\n\n  return (\n    <div>\n      <div>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : `https://upload.wikimedia.org/wikipedia/commons/thumb/f/f9/No-image-available.jpg/640px-No-image-available.jpg`\n          }\n          alt={title}\n        />\n        <div>\n          <h1>\n            {original_title ? original_title : 'There should have been a title'}\n          </h1>\n          <p>\n            <span>Rating: </span> {rating ? rating : 'Absent'}\n          </p>\n          <p>\n            <span>Release date: </span> {date ? date : 'Absent'}\n          </p>\n          <p>\n            <span>Genre: </span> {genresArray ? genresArray : 'Repeated'}\n          </p>\n          <p>\n            <span>Description: </span>\n            {overview\n              ? overview\n              : 'There should have been a description here, but it is better to see once than to read a hundred times.'}\n          </p>\n        </div>\n      </div>\n      <div>\n        <span>Additional information</span>\n      </div>\n      <div>\n        <div>\n          <div>\n            <NavLink to=\"cast\" state={location.state}>\n              Cast\n            </NavLink>\n          </div>\n          <div>|</div>\n          <div>\n            <NavLink to=\"reviews\" state={location.state}>\n              Reviews\n            </NavLink>\n          </div>\n        </div>\n      </div>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n}\n\nMovieDetailPage.propTypes = {\n  data: PropTypes.shape({\n    original_title: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    genres: PropTypes.array.isRequired,\n    overview: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nexport default function Button({ location }) {\n  return (\n    <>\n      <NavLink to={location}> Back to</NavLink>\n    </>\n  );\n}\n\nButton.propTypes = {\n  location: PropTypes.any.isRequired,\n};\n","import { useEffect, useState, useRef } from 'react';\nimport { getMovieDetails } from 'Services/Api';\nimport { useParams } from 'react-router-dom';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport MovieDetailPage from 'components/MovieDetailPage';\nimport Loader from 'components/Loader';\nimport Button from 'components/Button';\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n};\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetailPage, setMovieDetailPage] = useState();\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(STATUS.IDLE);\n\n  const location = useLocation();\n  const backLink = useRef(location?.state?.from ?? '/');\n\n  useEffect(() => {\n    const detailInfo = async () => {\n      setStatus(STATUS.PENDING);\n\n      try {\n        const data = await getMovieDetails(movieId);\n        setMovieDetailPage(data);\n        setStatus(STATUS.RESOLVED);\n        setError('');\n      } catch (error) {\n        setStatus(STATUS.REJECTED);\n        setError(error.message);\n      }\n    };\n    detailInfo();\n  }, [movieId, setMovieDetailPage]);\n\n  return (\n    <section>\n      <div>\n        <Button location={backLink.current} />\n        {error && <Navigate to=\"/\" replace />}\n        {status === STATUS.PENDING && <Loader />}\n        {movieDetailPage && <MovieDetailPage data={movieDetailPage} />}\n      </div>\n    </section>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from './Api-key';\n// https://api.themoviedb.org/3/movie/550?api_key=839ee1ac45e2249141bd738796b376ad пример исп-я\n\n// https://drive.google.com/file/d/1vR0hi3n1236Q5Bg4-se-8JVKD9UKSfId/view    ссылка на превью ДЗ\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  adult: false,\n  language: 'en-US',\n};\n\n// ! ====== for component Home popular movies ======\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day');\n\n  return data.results;\n};\n\n// ! ====== for component Movies search movies ======\nexport const searchMovies = async (query, page = 1) => {\n  const { data } = await axios.get(`/search/movie?query=${query}&page=${page}`);\n\n  return data.results;\n};\n\n// ! ====== for details info about movie ======\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`);\n\n  return data;\n};\n\n// ! ====== get info about the cast of movie ======\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n\n  return data;\n};\n\n// ! ====== get info about the rewiews of movie ======\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n\n  return data;\n};\n","const API_KEY = '839ee1ac45e2249141bd738796b376ad';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport { API_KEY, BASE_URL };\n"],"names":["MovieDetailPage","data","original_title","title","genres","overview","poster_path","release_date","vote_average","rating","Math","round","date","slice","genresArray","map","gen","name","join","location","useLocation","src","alt","to","state","Suspense","fallback","Loader","Button","STATUS","movieId","useParams","useState","movieDetailPage","setMovieDetailPage","error","setError","status","setStatus","backLink","useRef","from","useEffect","detailInfo","getMovieDetails","message","current","replace","axios","api_key","adult","language","getTrendingMovies","results","searchMovies","query","page","getMovieCredits","getMovieReviews"],"sourceRoot":""}